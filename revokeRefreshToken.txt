  revokeToken() {
 +        return new Promise((resolve, reject) => {
 +            let search = new URLSearchParams();
 +            search.set('token_type_hint', 'refresh_token');
 +            search.set('client_id', this.clientId);
 +            search.set('token', this._storage.getItem('refresh_token'));
 +
 +            if (this.dummyClientSecret) {
 +                search.set('client_secret', this.dummyClientSecret);
 +            }
 +
 +            let headers = new Headers();
 +            headers.set('Content-Type', 'application/x-www-form-urlencoded');
 +
 +            let params = search.toString();
 +            this.logOut(true);
 +            this.http.post(this.revocationEndpoint, params, { headers }).subscribe(
 +                () => {
 +                    console.debug('token revoked');
 +                    resolve();
 +                },
 +                (err) => {
 +                    console.error('Error performing token revocation', err);
 +                    reject(err);
 +                }
 +            );
 +        });
 +    }
 +